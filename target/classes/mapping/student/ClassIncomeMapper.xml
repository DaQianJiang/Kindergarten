<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jq.child.student.dao.ClassIncomeMapper" >
  <resultMap id="BaseResultMap" type="com.jq.child.student.pojo.ClassIncome" >
    <id column="income_id" property="incomeId" jdbcType="INTEGER" />
    <result column="class_num" property="classNum" jdbcType="VARCHAR" />
    <result column="opt_parent" property="optParent" jdbcType="VARCHAR" />
    <result column="in_num" property="inNum" jdbcType="INTEGER" />
    <result column="opt_time" property="optTime" jdbcType="DATE" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
    <result column="ext3" property="ext3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    income_id, class_num, opt_parent, in_num, opt_time, ext1, ext2, ext3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jq.child.student.pojo.ClassIncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from class_income
    where income_id = #{incomeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from class_income
    where income_id = #{incomeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jq.child.student.pojo.ClassIncomeExample" >
    delete from class_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jq.child.student.pojo.ClassIncome" >
    insert into class_income (income_id, class_num, opt_parent, 
      in_num, opt_time, ext1, 
      ext2, ext3)
    values (#{incomeId,jdbcType=INTEGER}, #{classNum,jdbcType=VARCHAR}, #{optParent,jdbcType=VARCHAR}, 
      #{inNum,jdbcType=INTEGER}, #{optTime,jdbcType=DATE}, #{ext1,jdbcType=VARCHAR}, 
      #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jq.child.student.pojo.ClassIncome" >
    insert into class_income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="incomeId != null" >
        income_id,
      </if>
      <if test="classNum != null" >
        class_num,
      </if>
      <if test="optParent != null" >
        opt_parent,
      </if>
      <if test="inNum != null" >
        in_num,
      </if>
      <if test="optTime != null" >
        opt_time,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
      <if test="ext3 != null" >
        ext3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="incomeId != null" >
        #{incomeId,jdbcType=INTEGER},
      </if>
      <if test="classNum != null" >
        #{classNum,jdbcType=VARCHAR},
      </if>
      <if test="optParent != null" >
        #{optParent,jdbcType=VARCHAR},
      </if>
      <if test="inNum != null" >
        #{inNum,jdbcType=INTEGER},
      </if>
      <if test="optTime != null" >
        #{optTime,jdbcType=DATE},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        #{ext3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jq.child.student.pojo.ClassIncomeExample" resultType="java.lang.Integer" >
    select count(*) from class_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update class_income
    <set >
      <if test="record.incomeId != null" >
        income_id = #{record.incomeId,jdbcType=INTEGER},
      </if>
      <if test="record.classNum != null" >
        class_num = #{record.classNum,jdbcType=VARCHAR},
      </if>
      <if test="record.optParent != null" >
        opt_parent = #{record.optParent,jdbcType=VARCHAR},
      </if>
      <if test="record.inNum != null" >
        in_num = #{record.inNum,jdbcType=INTEGER},
      </if>
      <if test="record.optTime != null" >
        opt_time = #{record.optTime,jdbcType=DATE},
      </if>
      <if test="record.ext1 != null" >
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
      <if test="record.ext3 != null" >
        ext3 = #{record.ext3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update class_income
    set income_id = #{record.incomeId,jdbcType=INTEGER},
      class_num = #{record.classNum,jdbcType=VARCHAR},
      opt_parent = #{record.optParent,jdbcType=VARCHAR},
      in_num = #{record.inNum,jdbcType=INTEGER},
      opt_time = #{record.optTime,jdbcType=DATE},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR},
      ext3 = #{record.ext3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jq.child.student.pojo.ClassIncome" >
    update class_income
    <set >
      <if test="classNum != null" >
        class_num = #{classNum,jdbcType=VARCHAR},
      </if>
      <if test="optParent != null" >
        opt_parent = #{optParent,jdbcType=VARCHAR},
      </if>
      <if test="inNum != null" >
        in_num = #{inNum,jdbcType=INTEGER},
      </if>
      <if test="optTime != null" >
        opt_time = #{optTime,jdbcType=DATE},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
    </set>
    where income_id = #{incomeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jq.child.student.pojo.ClassIncome" >
    update class_income
    set class_num = #{classNum,jdbcType=VARCHAR},
      opt_parent = #{optParent,jdbcType=VARCHAR},
      in_num = #{inNum,jdbcType=INTEGER},
      opt_time = #{optTime,jdbcType=DATE},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR}
    where income_id = #{incomeId,jdbcType=INTEGER}
  </update>
</mapper>